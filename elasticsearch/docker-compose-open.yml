version: "2.1"

networks:
  aether:
    external:
      name: aether_bootstrap_net

services:

  odfe-elasticsearch:
    extends:
      file: docker-compose-base.yml
      service: elasticsearch-open-base
    environment:
      opendistro_security.ssl.http.enabled: "false"
      # elasticsearch.requestHeadersWhitelist: ["Authorization", "security_tenant"]
    volumes:
      - ./conf/log4j2.properties:/usr/share/elasticsearch/config/log4j2.properties
      - ./conf/security.yml:/usr/share/elasticsearch/plugins/opendistro_security/securityconfig/config.yml
    networks:
      - aether

  odfe-kibana:
    extends:
      file: docker-compose-base.yml
      service: kibana-open-base
    depends_on:
      - odfe-elasticsearch
    environment:
      ELASTICSEARCH_URL: http://odfe-elasticsearch:9200
      ELASTICSEARCH_PRESERVEHOST: "false"
      SERVER_BASEPATH: "/kibana-app"
      SERVER_REWRITEBASEPATH: "true"
      opendistro_security.ssl.http.enabled: "false"
      OPENDISTRO_SECURITY_AUTH_TYPE: "proxy"
      opendistro_security.auth.type: "proxy"
    volumes:
      - ./conf/security.yml:/usr/share/kibana/plugins/opendistro_security/securityconfig/config.yml
      # - ./conf/security.yml:/plugins/opendistro_security/securityconfig/config.yml
    networks:
      - aether

  # elasticsearch-consumer:
  #   extends:
  #     file: docker-compose-base.yml
  #     service: es-consumer-base
  #   environment:
  #     ELASTICSEARCH_INSTANCE_URLS: "elasticsearch"
  #     BOOTSTRAP_SERVERS: "kafka:29092"
  #     CONSUMER_PORT: 9099
  #     ES_CONSUMER_CONFIG_PATH: "/code/conf/consumer/consumer.json"
  #     ES_CONSUMER_KAFKA_CONFIG_PATH: "/code/conf/consumer/kafka.json"
  #   links:
  #     - elasticsearch
  #   networks:
  #     - aether
