user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /var/run/nginx.pid;
include /usr/share/nginx/modules/*.conf;
events {
  worker_connections 1024;
}


http {
  log_format          main  '$remote_addr - $remote_user [$time_local] "$request" '
                            '$status $body_bytes_sent "$http_referer" '
                            '"$http_user_agent" "$http_x_forwarded_for"';


  access_log          /var/log/nginx/access.log  main;
  sendfile            on;
  tcp_nopush          on;
  tcp_nodelay         on;
  keepalive_timeout   65;
  types_hash_max_size 2048;
  include             /etc/nginx/mime.types;
  default_type        application/octet-stream;

  map $http_x_forwarded_proto $thescheme {
    default $scheme;
    https https;
  }

  upstream kong {
    server kong:80;
  }

  upstream zb {
    server zeebe:26500;
  }

  upstream zb_http {
    server zeebe:9600;
  }

  upstream keycloak {
    server keycloak:8080;
  }
  
  proxy_set_header   Host $host;
  proxy_set_header   X-Real-IP $remote_addr;
  proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header   X-Forwarded-Host $server_name;


  # zeebe metrics (internal only)
  server {
    listen 9600;
    # debug
    access_log /dev/stdout main;
    error_log /dev/stdout debug;
    location / {
      proxy_set_header             Host $host;
      proxy_set_header             X-Real-IP $remote_addr;
      proxy_pass                   http://zb_http;
    }
  }

  # open auth (internal only)
  server {
    listen 26507 http2;
    # debug
    access_log /dev/stdout main;
    error_log /dev/stdout debug;
    location / {
      grpc_pass                   grpc://zb;
    }
  }

  # public endpoint (external facing)
  server {
    listen 26500 http2;
    # debug
    access_log /dev/stdout main;
    error_log /dev/stdout debug;
    location / {
      grpc_pass                   grpc://zb;
      auth_request                /auth;
      auth_request_set            $auth_status $upstream_status;
    }

    location /auth {
      internal;
      proxy_method                GET;
      proxy_pass                  http://kong/${ZEEBE_REALM}/zb/auth/user;
      proxy_set_header            Authorization $http_authorization;
      proxy_set_header            Host $host;
      proxy_http_version          1.1;
      proxy_pass_request_body     off;
      proxy_pass_request_headers  off;
    }
  }
}
