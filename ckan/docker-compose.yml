# https://github.com/ckan/ckan-docker/blob/master/docker-compose.yml

networks:
  aether:
    name: aether_bootstrap_net
    external: true

volumes:
  database-data-ckan:
    name: aether_ckan_data
    external: true
  solr-data-ckan:
    name: aether_ckan_solr_data
    external: true
  redis-data-ckan:

services:
  db-ckan:
    # image: postgis/postgis:${CKAN_DB_VERSION:-15-3.3-alpine}
    build:
      context: ./db
      args:
        VERSION: ${CKAN_DB_VERSION:-15-3.3-alpine}
    environment:
      PGUSER: ckan
      PGPASSWORD: ${CKAN_DB_PASSWORD}
      POSTGRES_DB: ckan
      POSTGRES_USER: ckan
      POSTGRES_PASSWORD: ${CKAN_DB_PASSWORD}
      DS_RO_PASS: ${CKAN_DATASTORE_READONLY_PASSWORD}
      PGDATA: /var/lib/postgresql/data/db
    volumes:
      - database-data-ckan:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready
      interval: 2s
      timeout: 3s
      retries: 30
    networks:
      - aether

  redis-ckan:
    image: redis:alpine
    volumes:
      - redis-data-ckan:/var/lib/redis/data
    healthcheck:
      test: redis-cli ping
      interval: 2s
      timeout: 3s
      retries: 30
    networks:
      - aether

  solr-ckan:
    # https://hub.docker.com/r/ckan/ckan-solr/tags
    image: ckan/ckan-solr:${CKAN_SOLR_VERSION:-2.9-solr8-spatial}
    volumes:
      - solr-data-ckan:/var/solr
    healthcheck:
      test: wget -qO /dev/null "http://localhost:8983/solr/"
      interval: 2s
      timeout: 3s
      retries: 30
    networks:
      - aether

  datapusher:
    # https://hub.docker.com/r/ckan/ckan-base-datapusher/tags
    image: ckan/ckan-base-datapusher:${DATAPUSHER_VERSION:-0.0.20}
    healthcheck:
      test: wget -qO /dev/null "http://localhost:8800"
      interval: 2s
      timeout: 3s
      retries: 30
    networks:
      - aether

  ckan:
    # https://hub.docker.com/r/ckan/ckan-base/tags
    image: ckan/ckan-base:${CKAN_VERSION:-2.9.7}
    environment:
      CKAN_MAX_UPLOAD_SIZE_MB: 20000
      CKAN_PORT: 5000
      CKAN_SITE_URL: http://localhost:5000

      CKAN_DATAPUSHER_URL: http://datapusher:8800
      CKAN__DATAPUSHER__CALLBACK_URL_BASE: http://ckan:5000
      CKAN_DATASTORE_READ_URL: postgresql://datastore_ro:${CKAN_DATASTORE_READONLY_PASSWORD}@db-ckan/datastore
      CKAN_DATASTORE_WRITE_URL: postgresql://ckan:${CKAN_DB_PASSWORD}@db-ckan/datastore
      CKAN_REDIS_URL: redis://redis-ckan:6379/1
      CKAN_SOLR_URL: http://solr-ckan:8983/solr/ckan
      CKAN_SQLALCHEMY_URL: postgresql://ckan:${CKAN_DB_PASSWORD}@db-ckan/ckan

      POSTGRES_PASSWORD: ${CKAN_DB_PASSWORD}
      DS_RO_PASS: ${CKAN_DATASTORE_READONLY_PASSWORD}

      CKAN_SYSADMIN_NAME: ${CKAN_SYSADMIN_NAME}
      CKAN_SYSADMIN_PASSWORD: ${CKAN_SYSADMIN_PASSWORD}
      CKAN_SYSADMIN_EMAIL: ${CKAN_SYSADMIN_EMAIL}

      TZ: UTC
    depends_on:
      - db-ckan
      - solr-ckan
      - redis-ckan
      - datapusher
    healthcheck:
      test: wget -qO /dev/null "http://localhost:5000"
      interval: 2s
      timeout: 3s
      retries: 30
    ports:
      - 5000:5000
    networks:
      - aether

  ckan-consumer:
    image: ehealthafrica/aether-ckan-consumer:${CKAN_CONSUMER_VERSION:-1.0.2}
    environment:
      # redis
      REDIS_DB: 0
      REDIS_HOST: redis-ckan
      REDIS_PORT: 6379

       # kafka
      KAFKA_URL: ${KAFKA_URL}
      SECURITY.PROTOCOL: ${KAFKA_SECURITY}
      SASL.MECHANISM: PLAIN
      SASL.USERNAME: ${KAFKA_CONSUMER_USER}
      SASL.PASSWORD: ${KAFKA_CONSUMER_PASSWORD}

      # consumer settings
      CONSUMER_NAME: CKAN-CONSUMER
      CONSUMER_CONFIG_PATH: /code/conf/consumer/consumer.json
      CONSUMER_KAFKA_CONFIG_PATH: /code/conf/consumer/kafka.json

      EXPOSE_PORT: 9009
      LOG_LEVEL: DEBUG
      TENANCY_HEADER: x-oauth-realm
    volumes:
      - ./conf/consumer.json:/code/conf/consumer/consumer.json
      - ./conf/kafka.json:/code/conf/consumer/kafka.json
    command: start
    networks:
      - aether
