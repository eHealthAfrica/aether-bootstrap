version: "2.1"

services:

  # ---------------------------------
  # Database
  # ---------------------------------

  postgres-base:
    image: postgres:10-alpine
    environment:
      PGUSER: postgres
    healthcheck:
      test: pg_isready
      interval: 2s
      timeout: 3s
      retries: 30

  minio-base:
    image: minio/minio:latest
    volumes:
      - ./.persistent_data/media:/data
    environment:
      MINIO_ACCESS_KEY: ${MINIO_STORAGE_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_STORAGE_SECRET_KEY}
    command: minio server --quiet --address ${MINIO_ENDPOINT} /data


  # ---------------------------------
  # Aether kernel
  # ---------------------------------

  kernel-base:
    image: ehealthafrica/aether-kernel:${AETHER_VERSION}
    environment:
      CSRF_COOKIE_DOMAIN: ${BASE_DOMAIN}
      DJANGO_SECRET_KEY: ${KERNEL_DJANGO_SECRET_KEY}
      LOGGING_FORMATTER: verbose
      HTML_SELECT_CUTOFF: 10
      PROFILING_ENABLED: "true"

      BUCKET_NAME: kernel
      DJANGO_STORAGE_BACKEND: minio
      MINIO_STORAGE_ACCESS_KEY: ${MINIO_STORAGE_ACCESS_KEY}
      MINIO_STORAGE_SECRET_KEY: ${MINIO_STORAGE_SECRET_KEY}
      MINIO_STORAGE_ENDPOINT: ${MINIO_ENDPOINT}
      MINIO_STORAGE_MEDIA_USE_PRESIGNED: null
      MINIO_STORAGE_MEDIA_URL: http://${MINIO_ENDPOINT}/kernel
      MINIO_STORAGE_AUTO_CREATE_MEDIA_BUCKET: "true"
      MINIO_STORAGE_AUTO_CREATE_MEDIA_POLICY: "true"

      APP_NAME: Aether Kernel

      ADMIN_USERNAME: ${KERNEL_ADMIN_USERNAME}
      ADMIN_PASSWORD: ${KERNEL_ADMIN_PASSWORD}
      ADMIN_TOKEN: ${KERNEL_ADMIN_TOKEN}

      KERNEL_READONLY_DB_USERNAME: ${KERNEL_READONLY_DB_USERNAME}
      KERNEL_READONLY_DB_PASSWORD: ${KERNEL_READONLY_DB_PASSWORD}

      DB_NAME: aether
      PGHOST: db
      PGPASSWORD: ${KERNEL_DB_PASSWORD}
      PGPORT: 5432
      PGUSER: postgres

      # Export
      EXPORT_CSV_ESCAPE: "\\"
      EXPORT_CSV_QUOTES: "\""
      EXPORT_CSV_SEPARATOR: ","
      EXPORT_DATA_FORMAT: "split"
      EXPORT_HEADER_CONTENT: "labels"
      EXPORT_HEADER_SEPARATOR: "/"
      EXPORT_HEADER_SHORTEN: "no"

      # Kong requirements
      GATEWAY_SERVICE_ID: kernel
      GATEWAY_PUBLIC_REALM: ${PUBLIC_REALM}

      KEYCLOAK_SERVER_URL: ${KEYCLOAK_SERVER_URL}
      KEYCLOAK_CLIENT_ID: ${KEYCLOAK_AETHER_CLIENT}

      MULTITENANCY: "true"
      DEFAULT_REALM: ${DEFAULT_REALM}
      REALM_COOKIE: ${REALM_COOKIE}

      UWSGI_BUFFER_SIZE: 32768
      CUSTOM_UWSGI_SERVE_STATIC: "true"

      WEB_SERVER_PORT: 8000
    volumes:
      # backup folder
      - ./.persistent_data/backups/kernel:/backups
    command: start

  # ---------------------------------
  # Aether UI
  # ---------------------------------

  ui-base:
    image: ehealthafrica/aether-ui:${AETHER_VERSION}
    environment:
      CSRF_COOKIE_DOMAIN: ${BASE_DOMAIN}
      DJANGO_SECRET_KEY: ${UI_DJANGO_SECRET_KEY}
      LOGGING_FORMATTER: verbose
      HTML_SELECT_CUTOFF: 10
      PROFILING_ENABLED: "true"

      APP_NAME: Aether

      ADMIN_USERNAME: ${UI_ADMIN_USERNAME}
      ADMIN_PASSWORD: ${UI_ADMIN_PASSWORD}

      AETHER_KERNEL_TOKEN: ${KERNEL_ADMIN_TOKEN}
      AETHER_KERNEL_URL: ${BASE_PROTOCOL}://${BASE_DOMAIN}/{realm}/kernel
      AETHER_KERNEL_URL_TEST: http://kernel-test:9000

      DB_NAME: ui
      PGHOST: db
      PGPASSWORD: ${UI_DB_PASSWORD}
      PGPORT: 5432
      PGUSER: postgres

      # Kong requirements
      GATEWAY_SERVICE_ID: ui
      GATEWAY_PUBLIC_REALM: ${PUBLIC_REALM}

      KEYCLOAK_SERVER_URL: ${KEYCLOAK_SERVER_URL}
      KEYCLOAK_CLIENT_ID: ${KEYCLOAK_AETHER_CLIENT}

      MULTITENANCY: "true"
      DEFAULT_REALM: ${DEFAULT_REALM}
      REALM_COOKIE: ${REALM_COOKIE}

      UWSGI_BUFFER_SIZE: 32768
      CUSTOM_UWSGI_SERVE_STATIC: "true"

      WEB_SERVER_PORT: 8004
    volumes:
      # backup folder
      - ./.persistent_data/backups/ui:/backups
    command: start

  # ---------------------------------
  # API & Auth
  # ---------------------------------

  kong-base:
    image: ehealthafrica/kong:${KONG_VERSION:-1.1}
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: db
      KONG_PG_DATABASE: kong
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: ${KONG_PG_PASSWORD}

      KONG_NGINX_PROXY_LARGE_CLIENT_HEADER_BUFFERS: "16 128k"
      KONG_NGINX_PROXY_PROXY_BUFFERS: "16 128k"
      KONG_NGINX_PROXY_PROXY_BUFFER_SIZE: "128k"
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_PROXY_LISTEN: 0.0.0.0:80, 0.0.0.0:8443

      KONG_PLUGINS: bundled,kong-oidc-auth
    # volumes:
    #   # uncomment to mount logs outside of docker
    #   - ./.persistent_data/logs/kong:/usr/local/kong/logs/
    ports:
      - 80:80
      - 8443:8443  # ODK Collect requirement!!!
      - 8001:8001  # open this port to access to kong admin
    command: ["kong", "start", "--v"]

  keycloak-base:
    image: jboss/keycloak:latest
    volumes:
      # custom aether theme
      - ./api-auth/keycloak/aether-theme:/opt/jboss/keycloak/themes/aether
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: db
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_SCHEMA: public
      DB_PASSWORD: ${KEYCLOAK_PG_PASSWORD}

      KEYCLOAK_USER: ${KEYCLOAK_GLOBAL_ADMIN}
      KEYCLOAK_PASSWORD: ${KEYCLOAK_GLOBAL_PASSWORD}

      PROXY_ADDRESS_FORWARDING: "true"
      PROXY_PORT_FORWARDING: "true"

      KEYCLOAK_LOGLEVEL: ERROR
      ROOT_LOGLEVEL: ERROR
    # this is private to the cluster, only open for debugging
    # ports:
    #   - 8080:8080


  # ---------------------------------
  # Data Generation
  # ---------------------------------

  assets-base:
    image: aether-assets
    build: ./assets/generation
    volumes:
      - ./assets/generation:/code
      - ./assets/resources:/code/resources
    environment:
      KERNEL_URL: ${BASE_PROTOCOL}://${BASE_DOMAIN}/dev/kernel
      KERNEL_USER: ${KEYCLOAK_INITIAL_USER_USERNAME}
      KERNEL_PASSWORD: ${KEYCLOAK_INITIAL_USER_PASSWORD}

      REALM: dev
      KEYCLOAK_URL: ${BASE_PROTOCOL}://${BASE_DOMAIN}/auth

      CLIENT_LOGLEVEL: INFO
      ROOT_LOGLEVEL: DEBUG

      PROJECT_NAME: DefaultDemo
      MAPPING_NAME: default_mapping

  auth-base:
    image: ehealthafrica/gateway-manager:${GATEWAY_VERSION:-latest}
    environment:
      DEBUG: null

      BASE_DOMAIN: ${BASE_DOMAIN}
      BASE_HOST: ${BASE_PROTOCOL}://${BASE_DOMAIN}

      KEYCLOAK_GLOBAL_ADMIN: ${KEYCLOAK_GLOBAL_ADMIN}
      KEYCLOAK_GLOBAL_PASSWORD: ${KEYCLOAK_GLOBAL_PASSWORD}

      KEYCLOAK_INTERNAL: ${KEYCLOAK_INTERNAL}/
      KONG_INTERNAL: ${KONG_INTERNAL}

      ZOOKEEPER_HOST: zookeeper:32181
      ZOOKEEPER_USER: ${ZOOKEEPER_ROOT_USER}
      ZOOKEEPER_PW: ${ZOOKEEPER_ROOT_PASSWORD}
      KAFKA_SECRET: ${KAFKA_SECRET}

      ELASTICSEARCH_HOST: http://elasticsearch:9200
      ELASTICSEARCH_USER: admin
      ELASTICSEARCH_PW: ${ELASTICSEARCH_PASSWORD}

    volumes:
      - ./api-auth/app:/code/app
      - ./api-auth/service:/code/service
      - ./api-auth/solution:/code/solution
      - ./api-auth/keycloak/realm/realm_template.json:/code/templates/realm_template.json
    command: help
