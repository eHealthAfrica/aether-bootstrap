version: "2.1"

networks:
  # docker network create aether_test
  test:
    external:
      name: aether_test

volumes:
  # docker volume create aether_test_database_data
  aether_test_database_data:
    external:
      name: aether_test_database_data

services:

  # ---------------------------------
  # Database
  # ---------------------------------

  db-test:
    extends:
      file: ./docker-compose-base.yml
      service: postgres-base
    volumes:
      - aether_test_database_data:/var/lib/postgresql/data
    networks:
      - test

  # ---------------------------------
  # Aether kernel
  # ---------------------------------

  kernel-test:
    extends:
      file: ./docker-compose-base.yml
      service: kernel-base
    environment:
      TESTING: "true"
      DJANGO_SECRET_KEY: ${TEST_KERNEL_DJANGO_SECRET_KEY}

      ADMIN_USERNAME: ${TEST_KERNEL_ADMIN_USERNAME}
      ADMIN_PASSWORD: ${TEST_KERNEL_ADMIN_PASSWORD}
      ADMIN_TOKEN: ${TEST_KERNEL_ADMIN_TOKEN}

      KERNEL_READONLY_DB_USERNAME: ${TEST_KERNEL_READONLY_DB_USERNAME}
      KERNEL_READONLY_DB_PASSWORD: ${TEST_KERNEL_READONLY_DB_PASSWORD}

      DB_NAME: aether-kernel-test
      PGHOST: db-test
      PGPASSWORD: ${TEST_KERNEL_DB_PASSWORD}

      WEB_SERVER_PORT: 9000
    volumes:
      - ./.persistent_data/test/media/kernel:/media
      - ./.persistent_data/test/static/kernel:/var/www/static
    ports:
      - "9000:9000"
    depends_on:
      db-test:
        condition: service_healthy
    networks:
      - test

  # ---------------------------------
  # Aether ODK module
  # ---------------------------------

  odk-test:
    extends:
      file: ./docker-compose-base.yml
      service: odk-base
    environment:
      TESTING: "true"
      DJANGO_SECRET_KEY: ${TEST_ODK_DJANGO_SECRET_KEY}

      ADMIN_USERNAME: ${TEST_ODK_ADMIN_USERNAME}
      ADMIN_PASSWORD: ${TEST_ODK_ADMIN_PASSWORD}
      ADMIN_TOKEN: ${TEST_ODK_ADMIN_TOKEN}

      AETHER_KERNEL_URL: http://kernel-test:9000
      AETHER_KERNEL_TOKEN: ${TEST_KERNEL_ADMIN_TOKEN}

      DB_NAME: aether-odk-test
      PGHOST: db-test
      PGPASSWORD: ${TEST_ODK_DB_PASSWORD}

      WEB_SERVER_PORT: 9002
    volumes:
      - ./.persistent_data/test/media/odk:/media
      - ./.persistent_data/test/static/odk:/var/www/static
    ports:
      - "9002:9002"
    depends_on:
      db-test:
        condition: service_healthy
      kernel-test:
        condition: service_started
    networks:
      - test

  # ---------------------------------
  # Kafka & Zookeeper
  # ---------------------------------

  kafka-test:
    extends:
      file: ./docker-compose-base.yml
      service: kafka-base
    depends_on:
      - zookeeper-test
    links:
      - zookeeper-test
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-test:32189
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-test:29092
      ADVERTISED_HOST_NAME: kafka-test
    networks:
      - test

  zookeeper-test:
    extends:
      file: ./docker-compose-base.yml
      service: zookeeper-base
    environment:
      ZOOKEEPER_CLIENT_PORT: 32189
    networks:
      - test

  # ---------------------------------
  # Aether Kafka Producer
  # ---------------------------------

  producer-test:
    extends:
      file: ./docker-compose-base.yml
      service: aether-producer-base
    environment:
      # These variables will override the ones indicated in the settings file
      KAFKA_URL: kafka-test:29092
      KERNEL_URL: http://kernel-test:9000
      KERNEL_USERNAME: ${TEST_KERNEL_ADMIN_USERNAME}
      KERNEL_PASSWORD: ${TEST_KERNEL_ADMIN_PASSWORD}
      OFFSET_DB_URL: sqlite:///test-offset.db
      POSTGRES_DBNAME: aether-kernel-test
      POSTGRES_HOST: db-test
      POSTGRES_USER: ${TEST_KERNEL_READONLY_DB_USERNAME}
      POSTGRES_PASSWORD: ${TEST_KERNEL_READONLY_DB_PASSWORD}
      SERVER_PORT: 9005
    links:
      - kafka-test
      - zookeeper-test
    ports:
      - "9005:9005"
    networks:
      - test
    command: start_test

  # ---------------------------------
  # Aether Integration Tests
  # ---------------------------------

  integration-test:
    image: ehealthafrica/aether-integration-test:${AETHER_VERSION}
    environment:
      KERNEL_URL: http://kernel-test:9000
      KERNEL_USERNAME: ${TEST_KERNEL_ADMIN_USERNAME}
      KERNEL_PASSWORD: ${TEST_KERNEL_ADMIN_PASSWORD}
    volumes:
      - ./VERSION:/code/VERSION
    networks:
      - test
    command: test
